Configuring Plugins
-------------------

* create a storage
  - a map would make most sense for the per-stage configuration
  - the per field could be in a vector because we don't need sorting on it
    (they'll just be passed stage->configure(field, value))
* use action rules to add things to the storage
* modify the pretty-printer to print the per-stage confs

Test Framework
--------------

- pretty printer must print job/section/sequence/stage in yaml or something
  similar
- option --dump-config
- ruby lib to compare two outputs

Integrate
---------

Requires working config-proto, and finished connectors in the pipeline bit.

* modify the pretty-printer to declare each pipeline object (i.e include
  sequences and do it in the way I would really iterate it all)
* add the real initialisation stuff to the pipeline objects (constructors,
  storage etc...)
* use the gapless stuff to create working stages
* use the socket proto to make the most simple possible command reciever
  - we can deal with true communication and updating some other time.
* we should have output!
