The unit tests are organised thusly:

Each directory has its own CMakeLists.txt which causes the tests to be 
compiled and adds them to the ctest runner.

- test/include/ or test/src/
  Any header or library files specific to running tests but are not actually
  tests themselves.  Include is for headers, src (rarely used) is for object
  code which is referenced in the build system instead of an #include directive.
- test/.../include/ or test/.../src/
  Non-test library stuff, but not library enough to go in test/include/.  
  Typically this is stuff like tests if a generic concept.  This way, each
  file in the mod/ or case/ directory corresponds to a single test.
- test/.../archetypes/
  Concept coverage tests.  Archetypes are minimal models of a particular 
  concept.
- test/.../concepts/
  Concept checking classes that aren't in the main source tree.  For example, 
  these might be used to check a portable API models to the same concept but 
  that concept is not actually public.
- test/scripts/
  Helper scripts for meta-generating tests.  The test framework causes these
  to run; they are run with the working directory as the one they are in.
- test/data/
  Data loaded by tests.
- test/examples/
  Tests of documentation examples.
- test/$component...
  Root directory for a particular component's tests.
- test/$component.../mod/
  Synthetic tests of each module, where a module is a class or a function.  
  Modules with multiple/complicated tests might have their own subdirectory.
- test/$component.../case/
  Tests of a specific case which involves many classes or in some way doesn't 
  fit with a particular module.  Subdirectories categorise the test cases.

